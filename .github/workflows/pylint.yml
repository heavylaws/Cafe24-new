name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Check for environment.yml
      id: check-env-file
      run: |
        if [ -f environment.yml ]; then
          echo "env_file_exists=true" >> $GITHUB_OUTPUT
        else
          echo "env_file_exists=false" >> $GITHUB_OUTPUT
        fi
    - name: Set up Python ${{ matrix.python-version }}
      if: steps.check-env-file.outputs.env_file_exists == 'false'
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Miniconda
      if: steps.check-env-file.outputs.env_file_exists == 'true'
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        miniconda-version: "latest"
        activate-environment: test-env
        environment-file: environment.yml
        auto-activate-base: false
    - name: Install dependencies (pip)
      if: steps.check-env-file.outputs.env_file_exists == 'false'
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
    - name: Install dependencies (conda)
      if: steps.check-env-file.outputs.env_file_exists == 'true'
      shell: bash -l {0}
      run: |
        conda env update --file environment.yml --name test-env
    - name: Install pylint
      shell: bash -l {0}
      run: |
        if [ "${{ steps.check-env-file.outputs.env_file_exists }}" == "true" ]; then
          conda install pylint
        else
          pip install pylint
        fi
    - name: Analysing the code with pylint
      shell: bash -l {0}
      run: |
        pylint $(git ls-files '*.py')
